version: "3.7"

services:
  main:
    container_name: main
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 192.168.99.100:${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229 # debug proposes
    command: npm run start:debug
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - mongo
  mongo:
    container_name: mongo
    image: mongo:4.4
    networks:
      - webnet
    environment:
      #      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      #      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      #      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
      - ${MONGODB_TIMEZONE}
    ports:
      - ${MONGODB_PORT_OUT}:${MONGODB_PORT}
    volumes:
      #      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro # ro - read only
      - mongodata:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:6-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT_OUT}:${REDIS_PORT}
    volumes:
      - redis:/var/lib/redis
      - redis-conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - webnet
networks:
  webnet:
volumes:
  mongodata:
  redis:
  redis-conf:
